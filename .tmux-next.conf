# vim: foldmethod=marker
# Prefix settings {{{1

unbind C-b
set -g prefix C-Space
# bind Space send-prefix

#}}}1
# Bindings {{{1
set -g repeat-time 250

# Bindings in normal mode {{{2
bind r source-file ~/.tmux.conf \; display "tmux settings reloaded!"

# Hides or unhides status bar
bind C-s set status

# Returns to automatic renaming
bind u set automatic-rename

# Swaps windows (overwrites a shortcut for a similar and inferior behavior)
bind . command-prompt -I ! "swap-window -t '%%'"

# Windows and panes
bind |   split-window -h -c "#{pane_current_path}"
bind '"' split-window -h -c "#{pane_current_path}"
bind -   split-window -v -c "#{pane_current_path}"
bind c   new-window      -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits
IS_VIM='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$IS_VIM" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$IS_VIM" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$IS_VIM" "send-keys C-k"  "select-pane -U" 
# the mapping above prevents me using i_^k in vim under mutt, but if I add mutt
# to the regex at the beginning of this paragraph, then when I'm inside mutt
# (and outside of vim), I get problems changing panes...
bind -n C-l if-shell "$IS_VIM" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$IS_VIM" "send-keys C-\\" "select-pane -l"

# Bindings to enter these combinations pure
bind h send-keys 'C-h'
bind j send-keys 'C-j'
bind k send-keys 'C-k'
bind l send-keys 'C-l'

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Various ways to go between windows
bind -n S-Left  previous-window
bind -n S-Right next-window
bind -r C-l     next-window
bind -r C-h     previous-window
bind -r C-\     last-window
bind -n M-1     select-window -t :1
bind -n M-2     select-window -t :2
bind -n M-3     select-window -t :3
bind -n M-4     select-window -t :4
bind -n M-5     select-window -t :5
bind -n M-6     select-window -t :6
bind -n M-7     select-window -t :7
bind -n M-8     select-window -t :8
bind -n M-9     select-window -t :9

# To get C-Arrow working
setw -g xterm-keys on

unbind Up
unbind Down
bind Up break-pane
bind Down join-pane -s !

# Toggle simpler status-left
# bind C-m set status-left "#[fg=blue]#S"

# To move windows aronud
bind -r < swap-window -t:-1
bind -r > swap-window -t:+1

# Sometimes I want to maximize and instead end up suspending the client
unbind C-z
bind C-z resize-pane -Z

# toggle and untoggle the elaborated left side of the status bar
bind a set status-left "#[fg=blue]#S"
bind A set status-left "#[fg=blue]#S #[default]#(tmux-mem-cpu-load 2 2)"

#}}}2
# Bindings in copy mode {{{2
setw -g mode-keys vi

unbind [
bind   Space   copy-mode
bind   C-Space copy-mode
unbind p
bind   p       paste-buffer

unbind -t vi-copy Escape
bind   -t vi-copy Escape cancel
bind   -t vi-copy v      begin-selection
bind   -t vi-copy y      copy-selection -x
bind   -t vi-copy C-v    rectangle-toggle
unbind -t vi-copy Space
bind   -t vi-copy Space  cursor-right

#}}}2
# Copy-paste {{{2
# Using xsel {{{3
bind C-c run "tmux save-buffer - | xsel --clipboard --input"
bind C-v run "tmux set-buffer \"$(xsel --clipboard --output)\"; tmux paste-buffer"

#}}}3
# Using xclip (commented-out) {{{3
# bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

#}}}3
#}}}2
#}}}1
# Mouse settings {{{1

set -g mouse on

#}}}1
# Other settings {{{1

set -g base-index 1

# set -g default-terminal "tmux-it-256color"
# set -g default-terminal "xterm-256color"
set -g default-terminal "tmux-256color"

set -g set-titles off
set -g set-titles-string "#W"
setw -g pane-base-index 1
set -g history-limit 100000

## The following doesn't work ##
set -g update-environment "DBUS_SESSION_BUS_ADDRESS DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# tmux messages are displayed for 4 seconds
set -g display-time 1000

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

## This is intended to make cursor shape change possible in nvim
## Indeed: I removed this and the cursors stopped changing shapes
## This doen't work in gnome-terminal and creates weird characters
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# this is a prerequisite for the vim plugin vim-tmux-focus-events
set -g focus-events on

#}}}1
# Appearances {{{1

# Pane Borders {{{2
# set -g pane-border-fg green
# set -g pane-active-border-fg white

#}}}2
# Window status {{{2
# setw -g window-status-fg default
# setw -g window-status-bg default
# setw -g window-status-attr dim
# setw -g window-status-current-fg default
# setw -g window-status-current-bg default
# setw -g window-status-current-attr default
setw -g window-status-activity-attr italics

#}}}2
# Status bar {{{2
set -g status-interval 2
set -g status-justify centre
set -g status-left-length 50
# set -g status-left "#[fg=blue]#S #[default]#(tmux-mem-cpu-load 2 2)"
set -g status-left "#[fg=blue]#S"
# set -g status-right "#[fg=blue] %R #[fg=default]#(~/bin/battery2)"
set -g status-right "#[fg=blue] %R"
set -g automatic-rename-format "#{s/bash//:pane_current_command}"
set -g window-status-format "#I #{=-15:?window_name,#{window_name},#{s/rafael/home/:?pane_current_path,#{b:pane_current_path},}}#F "
set -g window-status-current-format "#[fg=red](#[fg=default]#I #{=-15:?window_name,#{window_name},#{s/rafael/home/:?pane_current_path,#{b:pane_current_path},}}#F#[fg=red])#[fg=default] "
setw -g monitor-activity on

#}}}2
# Solarized Colors {{{2

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# set inactive/active window styles
set -g window-style 'bg=colour18'
# color8 is ok. color18 is almost perfect
set -g window-active-style 'bg=black'

#}}}2

## this line gives me true color in gnome-terminal
## when I start tmux with `TERM=xterm-256color tmux`
## (also, there can't be other running tmuxes)
# set -ga terminal-overrides ",xterm-256color:Tc"

#}}}1
